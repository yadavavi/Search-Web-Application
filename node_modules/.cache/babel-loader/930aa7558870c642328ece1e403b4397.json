{"ast":null,"code":"var _jsxFileName = \"/home/adi-sin/Search-Web-Application/src/components/SearchResult/Sections/CheckBox.js\";\nimport React, { Fragment } from \"react\";\nimport { Card, Checkbox, Typography } from \"antd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Title\n} = Typography;\n\nconst CheckBox = _ref => {\n  let {\n    onFilterHandler,\n    check,\n    setCheck,\n    entryAttr\n  } = _ref;\n\n  const handleToggle = (value, key) => {\n    const currentIndex = check[key].indexOf(value);\n    const newChecked = { ...check\n    };\n\n    if (currentIndex === -1) {\n      newChecked[key] = [...newChecked[key], value];\n    } else {\n      newChecked[key].splice(currentIndex, 1);\n    }\n\n    setCheck(newChecked);\n    onFilterHandler(newChecked);\n  };\n\n  const renderProductTypeCheckboxLists = () => entryAttr.productType && entryAttr.productType.map((value, index) => /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n      onChange: () => handleToggle(value, \"productType\"),\n      type: \"checkbox\",\n      checked: check[\"productType\"].indexOf(value) === -1 ? false : true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this), \"\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"span\", {\n      children: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)]\n  }, index, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 7\n  }, this));\n\n  const renderStatusCheckboxLists = () => entryAttr.productStatus && entryAttr.productStatus.map((value, index) => /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n      name: \"status\",\n      onChange: () => handleToggle(value, \"status\"),\n      type: \"checkbox\",\n      checked: check[\"status\"].indexOf(value) === -1 ? false : true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this), \"\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"span\", {\n      children: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)]\n  }, index, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 7\n  }, this));\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    style: {\n      width: 250\n    },\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      level: 5,\n      children: \"Product Type\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), renderProductTypeCheckboxLists(), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Title, {\n      level: 5,\n      children: \"Maker Product Status\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), renderStatusCheckboxLists()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_c = CheckBox;\nexport default CheckBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckBox\");","map":{"version":3,"sources":["/home/adi-sin/Search-Web-Application/src/components/SearchResult/Sections/CheckBox.js"],"names":["React","Fragment","Card","Checkbox","Typography","Title","CheckBox","onFilterHandler","check","setCheck","entryAttr","handleToggle","value","key","currentIndex","indexOf","newChecked","splice","renderProductTypeCheckboxLists","productType","map","index","renderStatusCheckboxLists","productStatus","width"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,EAAeC,QAAf,EAAyBC,UAAzB,QAA2C,MAA3C;;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAYD,UAAlB;;AAEA,MAAME,QAAQ,GAAG,QAAqD;AAAA,MAApD;AAAEC,IAAAA,eAAF;AAAmBC,IAAAA,KAAnB;AAA0BC,IAAAA,QAA1B;AAAoCC,IAAAA;AAApC,GAAoD;;AACpE,QAAMC,YAAY,GAAG,CAACC,KAAD,EAAQC,GAAR,KAAgB;AACnC,UAAMC,YAAY,GAAGN,KAAK,CAACK,GAAD,CAAL,CAAWE,OAAX,CAAmBH,KAAnB,CAArB;AACA,UAAMI,UAAU,GAAG,EAAE,GAAGR;AAAL,KAAnB;;AAEA,QAAIM,YAAY,KAAK,CAAC,CAAtB,EAAyB;AACvBE,MAAAA,UAAU,CAACH,GAAD,CAAV,GAAkB,CAAC,GAAGG,UAAU,CAACH,GAAD,CAAd,EAAqBD,KAArB,CAAlB;AACD,KAFD,MAEO;AACLI,MAAAA,UAAU,CAACH,GAAD,CAAV,CAAgBI,MAAhB,CAAuBH,YAAvB,EAAqC,CAArC;AACD;;AAEDL,IAAAA,QAAQ,CAACO,UAAD,CAAR;AACAT,IAAAA,eAAe,CAACS,UAAD,CAAf;AACD,GAZD;;AAcA,QAAME,8BAA8B,GAAG,MACrCR,SAAS,CAACS,WAAV,IACAT,SAAS,CAACS,WAAV,CAAsBC,GAAtB,CAA0B,CAACR,KAAD,EAAQS,KAAR,kBACxB,QAAC,QAAD;AAAA,4BACE,QAAC,QAAD;AACE,MAAA,QAAQ,EAAE,MAAMV,YAAY,CAACC,KAAD,EAAQ,aAAR,CAD9B;AAEE,MAAA,IAAI,EAAC,UAFP;AAGE,MAAA,OAAO,EAAEJ,KAAK,CAAC,aAAD,CAAL,CAAqBO,OAArB,CAA6BH,KAA7B,MAAwC,CAAC,CAAzC,GAA6C,KAA7C,GAAqD;AAHhE;AAAA;AAAA;AAAA;AAAA,YADF,2BAOE;AAAA,gBAAOA;AAAP;AAAA;AAAA;AAAA;AAAA,YAPF,eAQE;AAAA;AAAA;AAAA;AAAA,YARF;AAAA,KAAeS,KAAf;AAAA;AAAA;AAAA;AAAA,UADF,CAFF;;AAeA,QAAMC,yBAAyB,GAAG,MAChCZ,SAAS,CAACa,aAAV,IACAb,SAAS,CAACa,aAAV,CAAwBH,GAAxB,CAA4B,CAACR,KAAD,EAAQS,KAAR,kBAC1B,QAAC,QAAD;AAAA,4BACE,QAAC,QAAD;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,QAAQ,EAAE,MAAMV,YAAY,CAACC,KAAD,EAAQ,QAAR,CAF9B;AAGE,MAAA,IAAI,EAAC,UAHP;AAIE,MAAA,OAAO,EAAEJ,KAAK,CAAC,QAAD,CAAL,CAAgBO,OAAhB,CAAwBH,KAAxB,MAAmC,CAAC,CAApC,GAAwC,KAAxC,GAAgD;AAJ3D;AAAA;AAAA;AAAA;AAAA,YADF,2BAQE;AAAA,gBAAOA;AAAP;AAAA;AAAA;AAAA;AAAA,YARF,eASE;AAAA;AAAA;AAAA;AAAA,YATF;AAAA,KAAeS,KAAf;AAAA;AAAA;AAAA;AAAA,UADF,CAFF;;AAgBA,sBACE,QAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEG,MAAAA,KAAK,EAAE;AAAT,KAAb;AAAA,4BACE,QAAC,KAAD;AAAO,MAAA,KAAK,EAAE,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAGGN,8BAA8B,EAHjC,eAIE;AAAA;AAAA;AAAA;AAAA,YAJF,eAME,QAAC,KAAD;AAAO,MAAA,KAAK,EAAE,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,EAQGI,yBAAyB,EAR5B;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CA1DD;;KAAMhB,Q;AA4DN,eAAeA,QAAf","sourcesContent":["import React, { Fragment } from \"react\";\nimport { Card, Checkbox, Typography } from \"antd\";\n\nconst { Title } = Typography;\n\nconst CheckBox = ({ onFilterHandler, check, setCheck, entryAttr }) => {\n  const handleToggle = (value, key) => {\n    const currentIndex = check[key].indexOf(value);\n    const newChecked = { ...check };\n\n    if (currentIndex === -1) {\n      newChecked[key] = [...newChecked[key], value];\n    } else {\n      newChecked[key].splice(currentIndex, 1);\n    }\n\n    setCheck(newChecked);\n    onFilterHandler(newChecked);\n  };\n\n  const renderProductTypeCheckboxLists = () =>\n    entryAttr.productType &&\n    entryAttr.productType.map((value, index) => (\n      <Fragment key={index}>\n        <Checkbox\n          onChange={() => handleToggle(value, \"productType\")}\n          type=\"checkbox\"\n          checked={check[\"productType\"].indexOf(value) === -1 ? false : true}\n        />\n        &nbsp;&nbsp;\n        <span>{value}</span>\n        <br />\n      </Fragment>\n    ));\n\n  const renderStatusCheckboxLists = () =>\n    entryAttr.productStatus &&\n    entryAttr.productStatus.map((value, index) => (\n      <Fragment key={index}>\n        <Checkbox\n          name=\"status\"\n          onChange={() => handleToggle(value, \"status\")}\n          type=\"checkbox\"\n          checked={check[\"status\"].indexOf(value) === -1 ? false : true}\n        />\n        &nbsp;&nbsp;\n        <span>{value}</span>\n        <br />\n      </Fragment>\n    ));\n\n  return (\n    <Card style={{ width: 250 }}>\n      <Title level={5}>Product Type</Title>\n\n      {renderProductTypeCheckboxLists()}\n      <br />\n\n      <Title level={5}>Maker Product Status</Title>\n\n      {renderStatusCheckboxLists()}\n    </Card>\n  );\n};\n\nexport default CheckBox;\n"]},"metadata":{},"sourceType":"module"}