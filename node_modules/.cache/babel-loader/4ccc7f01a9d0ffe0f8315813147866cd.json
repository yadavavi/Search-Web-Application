{"ast":null,"code":"var _jsxFileName = \"/home/adi-sin/Search-Web-Application/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { Switch, Route, useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { entryAttr } from \"./assets/filter\";\nimport Home from \"./pages/Home\";\nimport SearchResult from \"./pages/SearchResult\";\nimport NotFound from \"./pages/NotFound\";\nimport MainLayout from \"./components/Layout/MainLayout.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [productsList, setProductsList] = useState([]);\n  const [searchInput, setSearchInput] = useState(\"\");\n  const [searchTerms, setSearchTerms] = useState(\"\");\n  const [params, setParams] = useState({\n    search: \"\",\n    status: [],\n    productType: []\n  });\n  const [checked, setChecked] = useState({\n    status: [],\n    productType: []\n  });\n  const history = useHistory();\n  useEffect(() => {\n    let search = params[\"search\"].toLowerCase().replace(/ /g, \"\");\n    let product = params[\"productType\"].toString().toLowerCase().replace(/ /g, \"\");\n    let status = params[\"status\"].toString().toLowerCase().replace(/ /g, \"\");\n    const param = new URLSearchParams({ ...(search && {\n        search: search\n      }),\n      ...(product && {\n        productType: product\n      }),\n      ...(status && {\n        status: status\n      })\n    });\n\n    if (param.toString()) {\n      let path = `/result?${param}`;\n      history.push(path);\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [params]);\n\n  const getProducts = variables => {\n    axios.post(\"localhost:9898/product/getProducts\", variables).then(response => {\n      if (response.data.success) {\n        setProductsList(response.data.products);\n      } else {\n        alert(\"Failed to fectch product datas\");\n      }\n    });\n  };\n\n  const reset = () => {\n    const newChecked = { ...checked\n    };\n    newChecked[\"productType\"] = [];\n    newChecked[\"status\"] = [];\n    setChecked(newChecked);\n    setSearchInput(\"\");\n    setSearchTerms(\"\");\n    setParams({\n      search: \"\",\n      status: [],\n      productType: []\n    });\n    setProductsList([]);\n  };\n\n  const onSearchHandler = input => {\n    const variables = {\n      filters: checked,\n      searchTerm: input\n    };\n    setParams({ ...params,\n      search: input\n    });\n    setSearchTerms(input);\n    getProducts(variables);\n  };\n\n  const onFilterHandler = input => {\n    const variables = {\n      filters: input,\n      searchTerm: searchTerms\n    };\n    getProducts(variables);\n  };\n\n  return /*#__PURE__*/_jsxDEV(MainLayout, {\n    searchInput: searchInput,\n    setSearchInput: setSearchInput,\n    onSearchHandler: onSearchHandler,\n    reset: reset,\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        exact: true,\n        children: /*#__PURE__*/_jsxDEV(Home, {\n          entryAttr: entryAttr,\n          check: checked,\n          setCheck: setChecked,\n          params: params,\n          setParams: setParams,\n          onFilterHandler: onFilterHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/result\",\n        children: /*#__PURE__*/_jsxDEV(SearchResult, {\n          params: params,\n          setParams: setParams,\n          entryAttr: entryAttr,\n          recordList: productsList,\n          check: checked,\n          setCheck: setChecked,\n          onFilterHandler: onFilterHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"*\",\n        children: /*#__PURE__*/_jsxDEV(NotFound, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"blHpKUIe5g4BWIi2XVgD3pbcyk4=\", false, function () {\n  return [useHistory];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/adi-sin/Search-Web-Application/src/App.js"],"names":["useState","useEffect","Switch","Route","useHistory","axios","entryAttr","Home","SearchResult","NotFound","MainLayout","App","productsList","setProductsList","searchInput","setSearchInput","searchTerms","setSearchTerms","params","setParams","search","status","productType","checked","setChecked","history","toLowerCase","replace","product","toString","param","URLSearchParams","path","push","getProducts","variables","post","then","response","data","success","products","alert","reset","newChecked","onSearchHandler","input","filters","searchTerm","onFilterHandler"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { Switch, Route, useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\n\nimport { entryAttr } from \"./assets/filter\";\n\nimport Home from \"./pages/Home\";\nimport SearchResult from \"./pages/SearchResult\";\nimport NotFound from \"./pages/NotFound\";\nimport MainLayout from \"./components/Layout/MainLayout.js\";\n\nfunction App() {\n  const [productsList, setProductsList] = useState([]);\n  const [searchInput, setSearchInput] = useState(\"\");\n  const [searchTerms, setSearchTerms] = useState(\"\");\n  const [params, setParams] = useState({\n    search: \"\",\n    status: [],\n    productType: [],\n  });\n  const [checked, setChecked] = useState({\n    status: [],\n    productType: [],\n  });\n  const history = useHistory();\n\n  useEffect(() => {\n    let search = params[\"search\"].toLowerCase().replace(/ /g, \"\");\n    let product = params[\"productType\"].toString().toLowerCase().replace(/ /g, \"\");\n    let status = params[\"status\"].toString().toLowerCase().replace(/ /g, \"\");\n    const param = new URLSearchParams({\n      ...(search && { search: search }),\n      ...(product && { productType: product }),\n      ...(status && { status: status }),\n    });\n    if (param.toString()) {\n      let path = `/result?${param}`;\n      history.push(path);\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [params]);\n\n  const getProducts = (variables) => {\n   axios\n      .post(\"localhost:9898/product/getProducts\", variables)\n      .then((response) => {\n        if (response.data.success) {\n          setProductsList(response.data.products);\n        } else {\n          alert(\"Failed to fectch product datas\");\n        }\n      });\n  };\n\n  const reset = () => {\n    const newChecked = { ...checked };\n    newChecked[\"productType\"] = [];\n    newChecked[\"status\"] = [];\n    setChecked(newChecked);\n    setSearchInput(\"\");\n    setSearchTerms(\"\");\n    setParams({ search: \"\", status: [], productType: [] });\n    setProductsList([]);\n  };\n\n  const onSearchHandler = (input) => {\n    const variables = {\n      filters: checked,\n      searchTerm: input,\n    };\n    setParams({ ...params, search: input });\n    setSearchTerms(input);\n    getProducts(variables);\n  };\n\n  const onFilterHandler = (input) => {\n    const variables = {\n      filters: input,\n      searchTerm: searchTerms,\n    };\n    getProducts(variables);\n  };\n\n  return (\n    <MainLayout\n      searchInput={searchInput}\n      setSearchInput={setSearchInput}\n      onSearchHandler={onSearchHandler}\n      reset={reset}\n    >\n      <Switch>\n        <Route path=\"/\" exact>\n          <Home\n            entryAttr={entryAttr}\n            check={checked}\n            setCheck={setChecked}\n            params={params}\n            setParams={setParams}\n            onFilterHandler={onFilterHandler}\n          />\n        </Route>\n        <Route path=\"/result\">\n          <SearchResult\n            params={params}\n            setParams={setParams}\n            entryAttr={entryAttr}\n            recordList={productsList}\n            check={checked}\n            setCheck={setChecked}\n            onFilterHandler={onFilterHandler}\n          />\n        </Route>\n        <Route path=\"*\">\n          <NotFound />\n        </Route>\n      </Switch>\n    </MainLayout>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}